pipeline {
    agent any

    environment {
        GIT_USER_NAME = "lavanthreddy11"
        GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
        SONAR_URL = "http://54.234.183.169:9000"
        DOCKERHUB_CREDENTIALS = "dockerhub"
        GITHUB_CREDENTIALS = "github"
    }

    stages {

        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build and Test') {
            steps {
                script {
                    sh '''
                        echo "üîß Building and Testing the Spring Boot App..."
                        cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                        mvn clean package -DskipTests
                    '''
                }
            }
        }

        stage('Static Code Analysis') {
            steps {
                withCredentials([string(credentialsId: 'sonar-token', variable: 'SONAR_TOKEN')]) {
                    sh '''
                        echo "üîç Running SonarQube Analysis..."
                        cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                        mvn sonar:sonar \
                          -Dsonar.projectKey=spring-boot-demo \
                          -Dsonar.host.url=${SONAR_URL} \
                          -Dsonar.login=${SONAR_TOKEN}
                    '''
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                withDockerRegistry([credentialsId: "${DOCKERHUB_CREDENTIALS}", url: ""]) {
                    sh '''
                        echo "üê≥ Building Docker Image..."
                        cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                        docker build -t lavanth11/maven-java17-docker:${BUILD_NUMBER} .

                        echo "üì§ Pushing Docker Image..."
                        docker push lavanth11/maven-java17-docker:${BUILD_NUMBER}
                    '''
                }
            }
        }

        stage('Update Deployment File') {
            steps {
                withCredentials([string(credentialsId: "${GITHUB_CREDENTIALS}", variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        echo "üìù Updating Kubernetes Deployment File..."
                        cd $WORKSPACE/java-maven-sonar-argocd-helm-k8s

                        git config user.email "abhishek.xyz@gmail.com"
                        git config user.name "Abhishek Veeramalla"

                        sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" spring-boot-app-manifests/deployment.yml

                        git add spring-boot-app-manifests/deployment.yml
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main
                    '''
                }
            }
        }
    }

    post {
        success {
            echo "‚úÖ Pipeline executed successfully!"
        }
        failure {
            echo "‚ùå Pipeline failed. Check console logs for details."
        }
        always {
            cleanWs()
        }
    }
}
